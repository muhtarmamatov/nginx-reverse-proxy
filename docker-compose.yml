version: '3'
services:
  db:
    image: postgres:10.1
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./conf/postgres/:/docker-entrypoint-initdb.d/
    networks:
      - bezkoder

  app:
    build: BezKoder
    image: bezkoder-app
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./logs/bezkoder:/var/log/bezkoder
    env_file:
      - .env
    environment:
      - POSTGRES_DB_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - POSTGRES_DB_USER=${DB_USER}
      - POSTGRES_DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - bezkoder

  prometheus:
      image: prom/prometheus:v2.35.0
      container_name: prometheus
      restart: unless-stopped
      volumes:
        - ./conf/prometheus:/etc/prometheus/
      command:
        - "--config.file=/etc/prometheus/prometheus.yaml"
      ports:
        - 9090:9090
      links:
        - app
      networks:
        - bezkoder
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./conf/grafana/dashboards/prometheus_dashboard.json:/etc/grafana/provisioning/dashboards/prometheus_dashboard.yaml
      - ./conf/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug
    networks:
      - bezkoder

networks:
  bezkoder:
    driver: bridge
